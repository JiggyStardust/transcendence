services:
  # HTTPS entrypoint; proxies frontend and backend microservices
  gateway:
    build:
      context: ./gateway
      dockerfile: Dockerfile
    container_name: transcendence-gateway
    ports: ["${GATEWAY_PORT}:${GATEWAY_PORT}"]
    volumes:
      - ./gateway/certs:/app/certs:ro
      - ./gateway/src:/app/src
      - /app/node_modules
    environment:
      - FRONTEND_URL=${FRONTEND_URL}
      - PORT=${GATEWAY_PORT}
      - HOST=${GATEWAY_HOST}
    depends_on: [frontend]
    restart: unless-stopped
    networks: [frontend-network]

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: transcendence-backend
    expose: ["${BACKEND_PORT}"]
    volumes:
      - ./backend:/app
      - /app/node_modules
    environment:
      - PORT=${BACKEND_PORT}
      - HOST=${BACKEND_HOST}
      - JWT_SECRET=${JWT_SECRET}
    restart: unless-stopped
    networks: [backend-network]

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: transcendence-frontend
    expose: ["${VITE_PORT}"]
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - VITE_PORT=${VITE_PORT}
      - VITE_HOST=${VITE_HOST}
      - VITE_ALLOWED_HOST_NAME=${VITE_ALLOWED_HOST_NAME}
      - VITE_BACKEND_INTERNAL_URL=${VITE_BACKEND_INTERNAL_URL}
    depends_on: [backend]
    restart: unless-stopped
    networks: [frontend-network, backend-network]

networks:
  backend-network:
    driver: bridge
  frontend-network:
    driver: bridge
